------------------ kinematics_fused_cu.forward -----------------sc:0
                  kinematics_fused_cu.forward took 0.000500 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 58, in demo_basic_ik
    q_sample = ik_solver.sample_configs(5)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1430, in sample_configs
    metrics = self.rollout_fn.rollout_constraint(

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 544, in rollout_constraint
    state = self.dynamics_model.forward(self.start_state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:1
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 59, in demo_basic_ik
    kin_state = ik_solver.fk(q_sample)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1465, in fk
    return self.kinematics.get_state(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 302, in get_state
    out = self.forward(q, link_name, calculate_jacobian)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:2
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 210, in _optimize
    curr_action_seq = self._run_opt_iters(

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:0
                  geom_cu.pose_distance took 0.000500 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 210, in _optimize
    curr_action_seq = self._run_opt_iters(

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:3
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 210, in _optimize
    curr_action_seq = self._run_opt_iters(

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:1
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 210, in _optimize
    curr_action_seq = self._run_opt_iters(

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:4
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 210, in _optimize
    curr_action_seq = self._run_opt_iters(

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:2
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 210, in _optimize
    curr_action_seq = self._run_opt_iters(

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:5
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 210, in _optimize
    curr_action_seq = self._run_opt_iters(

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:3
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 210, in _optimize
    curr_action_seq = self._run_opt_iters(

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:6
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:4
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:7
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:5
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:8
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:6
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:9
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:7
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:10
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:8
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:11
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:9
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:12
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:10
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:13
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:11
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:14
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:12
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:15
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:13
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:16
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:14
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:17
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:15
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 234, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:18
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 241, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:16
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 241, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:19
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 241, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:17
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 241, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:20
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 241, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:18
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 241, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:21
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 241, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:19
                  geom_cu.pose_distance took 0.000503 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 215, in _optimize
    self._initialize_cuda_graph(init_act, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 241, in _initialize_cuda_graph
    self._cu_act_seq = self._run_opt_iters(self._cu_act_in, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 259, in _run_opt_iters
    trajectory = self.generate_rollouts()

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\particle\parallel_mppi.py", line 613, in generate_rollouts
    return super().generate_rollouts(init_act)

  File "D:\ov\curobo\src\curobo\opt\particle\particle_opt_base.py", line 178, in generate_rollouts
    trajectories = self.rollout_fn(act_seq)

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:22
                  kinematics_fused_cu.forward took 0.000500 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:20
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:0
                  kinematics_fused_cu.backward took 0.000499 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:0
                  line_search_cu.line_search took 0.000501 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:0
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:0
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:23
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:21
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:1
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:1
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:1
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:1
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:24
                  kinematics_fused_cu.forward took 0.000499 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:22
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:2
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:2
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:2
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:2
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:25
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:23
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:3
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:3
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:3
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:3
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:26
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:24
                  geom_cu.pose_distance took 0.000500 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:4
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:4
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:4
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:4
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:27
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:25
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:5
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:5
                  line_search_cu.line_search took 0.000500 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:5
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:5
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:28
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:26
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:6
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:6
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:6
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:6
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:29
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:27
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:7
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:7
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:7
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:7
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:30
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:28
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:8
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:8
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:8
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:8
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:31
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:29
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:9
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:9
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:9
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:9
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:32
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:30
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:10
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:10
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:10
                  lbfgs_step_cu.forward took 0.000500 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:10
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:33
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:31
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:11
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:11
                  line_search_cu.line_search took 0.000499 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:11
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:11
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:34
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:32
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:12
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:12
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:12
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:12
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:35
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:33
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:13
                  kinematics_fused_cu.backward took 0.000498 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:13
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:13
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:13
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:36
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:34
                  geom_cu.pose_distance took 0.000499 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:14
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:14
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:14
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:14
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:37
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:35
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:15
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:15
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:15
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:15
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:38
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:36
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:16
                  kinematics_fused_cu.backward took 0.000500 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:16
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:16
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:16
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:39
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:37
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:17
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:17
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:17
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:17
                  line_search_cu.update_best took 0.000501 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:40
                  kinematics_fused_cu.forward took 0.000499 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:38
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:18
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:18
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:18
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:18
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:41
                  kinematics_fused_cu.forward took 0.000500 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:39
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:19
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:19
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:19
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:19
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:42
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:40
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:20
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:20
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:20
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:20
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:43
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:41
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:21
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:21
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:21
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:21
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:44
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:42
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:22
                  kinematics_fused_cu.backward took 0.000498 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:22
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:22
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:22
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:45
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:43
                  geom_cu.pose_distance took 0.000500 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:23
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:23
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:23
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:23
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:46
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:44
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:24
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:24
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:24
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:24
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:47
                  kinematics_fused_cu.forward took 0.000500 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:45
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:25
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:25
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:25
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:25
                  line_search_cu.update_best took 0.000500 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:48
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:46
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:26
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:26
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:26
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:26
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:49
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:47
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:27
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:27
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:27
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:27
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:50
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:48
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:28
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:28
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:28
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:28
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:51
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:49
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:29
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:29
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:29
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:29
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:52
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:50
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:30
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:30
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:30
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:30
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:53
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:51
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:31
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:31
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:31
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:31
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:54
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:52
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:32
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:32
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:32
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:32
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:55
                  kinematics_fused_cu.forward took 0.000506 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:53
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:33
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:33
                  line_search_cu.line_search took 0.000500 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:33
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:33
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:56
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:54
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:34
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:34
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:34
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:34
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:57
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:55
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:35
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:35
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:35
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:35
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:58
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:56
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:36
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:36
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:36
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:36
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:59
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:57
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:37
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:37
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:37
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:37
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:60
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:58
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:38
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:38
                  line_search_cu.line_search took 0.000500 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:38
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:38
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:61
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:59
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:39
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:39
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:39
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:39
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:62
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:60
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:40
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:40
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:40
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:40
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:63
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:61
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:41
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:41
                  line_search_cu.line_search took 0.000501 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:41
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:41
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:64
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:62
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:42
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:42
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:42
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:42
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:65
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:63
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:43
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:43
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:43
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:43
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:66
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:64
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:44
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:44
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:44
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:44
                  line_search_cu.update_best took 0.000503 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:67
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:65
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:45
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:45
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:45
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:45
                  line_search_cu.update_best took 0.000501 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:68
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:66
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:46
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:46
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:46
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:46
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:69
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:67
                  geom_cu.pose_distance took 0.000499 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:47
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:47
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:47
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:47
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:70
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:68
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:48
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:48
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:48
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:48
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:71
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:69
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:49
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:49
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:49
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:49
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:72
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:70
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:50
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:50
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:50
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:50
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:73
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:71
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:51
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:51
                  line_search_cu.line_search took 0.000497 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:51
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:51
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:74
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:72
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:52
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:52
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:52
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:52
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:75
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:73
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:53
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:53
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:53
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:53
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:76
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:74
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:54
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:54
                  line_search_cu.line_search took 0.000500 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:54
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:54
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:77
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:75
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:55
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:55
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:55
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:55
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:78
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:76
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:56
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:56
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:56
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:56
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:79
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:77
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:57
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:57
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:57
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:57
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:80
                  kinematics_fused_cu.forward took 0.000500 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:78
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:58
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:58
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:58
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:58
                  line_search_cu.update_best took 0.000500 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:81
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:79
                  geom_cu.pose_distance took 0.000500 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:59
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:59
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:59
                  lbfgs_step_cu.forward took 0.000499 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:59
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:82
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:80
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:60
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:60
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:60
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:60
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:83
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:81
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:61
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:61
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:61
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:61
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:84
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:82
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:62
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:62
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:62
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:62
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:85
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:83
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:63
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:63
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:63
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:63
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:86
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:84
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:64
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:64
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:64
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:64
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:87
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:85
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:65
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:65
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:65
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:65
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:88
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:86
                  geom_cu.pose_distance took 0.000499 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:66
                  kinematics_fused_cu.backward took 0.000500 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:66
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:66
                  lbfgs_step_cu.forward took 0.000500 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:66
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:89
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:87
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:67
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:67
                  line_search_cu.line_search took 0.000502 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:67
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:67
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:90
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:88
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:68
                  kinematics_fused_cu.backward took 0.000498 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:68
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:68
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:68
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:91
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:89
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:69
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:69
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:69
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:69
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:92
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:90
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:70
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:70
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:70
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:70
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:93
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:91
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:71
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:71
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:71
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:71
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:94
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:92
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:72
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:72
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:72
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:72
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:95
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:93
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:73
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:73
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:73
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:73
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:96
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:94
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:74
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:74
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:74
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:74
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 540, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:97
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:95
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:75
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:75
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:75
                  lbfgs_step_cu.forward took 0.000500 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:75
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:98
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:96
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:76
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:76
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:76
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:76
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:99
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:97
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:77
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:77
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:77
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:77
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:100
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:98
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:78
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:78
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:78
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:78
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:101
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:99
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:79
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:79
                  line_search_cu.line_search took 0.000500 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:79
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:79
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:102
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:100
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:80
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:80
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:80
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:80
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:103
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:101
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:81
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:81
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:81
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:81
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:104
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:102
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:82
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:82
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:82
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:82
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:105
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:103
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:83
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:83
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:83
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:83
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:106
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:104
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:84
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:84
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:84
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:84
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:107
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:105
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:85
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:85
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:85
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:85
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:108
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:106
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:86
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:86
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:86
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:86
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:109
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:107
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:87
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:87
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:87
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:87
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:110
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:108
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:88
                  kinematics_fused_cu.backward took 0.000501 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:88
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:88
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:88
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:111
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:109
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:89
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:89
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:89
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:89
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:112
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:110
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:90
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:90
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:90
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:90
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:113
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:111
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:91
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:91
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:91
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:91
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:114
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:112
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:92
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:92
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:92
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:92
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:115
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:113
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:93
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:93
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:93
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:93
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:116
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:114
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:94
                  kinematics_fused_cu.backward took 0.000500 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:94
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:94
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:94
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:117
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:115
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:95
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:95
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:95
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:95
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:118
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:116
                  geom_cu.pose_distance took 0.000502 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:96
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:96
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:96
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:96
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:119
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:117
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:97
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:97
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:97
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:97
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:120
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:118
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:98
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:98
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:98
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:98
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:121
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 588, in rollout_fn
    state = self.dynamics_model.forward(

  File "D:\ov\curobo\src\curobo\rollout\dynamics_model\kinematic_model.py", line 467, in forward
    ) = self.robot_model.forward(state_seq.position.view(shape_tup))

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:119
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 255, in _wolfe_line_search
    c, g_x = self._compute_cost_gradient(x_set)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 227, in _compute_cost_gradient
    trajectories = self.rollout_fn(x_in)  # x_n = (batch*line_search_scale) x horizon x d_action

  File "D:\ov\curobo\src\curobo\rollout\rollout_base.py", line 478, in __call__
    return self.rollout_fn(act)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 593, in rollout_fn
    cost_seq = self.cost_fn(state, act_seq)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.backward -----------------sc:99
                  kinematics_fused_cu.backward took 0.000000 secs
  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 289, in apply
    return user_fn(self, *args)

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 140, in backward
    grad_joint = KinematicsFusedFunction._call_backward_cuda(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 234, in _call_backward_cuda
    end_cuda_call(ccd, out_q)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.line_search -----------------sc:99
                  line_search_cu.line_search took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 182, in _opt_step
    q_n, cost_n, grad_q_n = self._approx_line_search(q, grad_q)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 428, in _approx_line_search
    return self._wolfe_line_search(x, step_direction)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 336, in _wolfe_line_search
    (best_x_n, best_c_n, best_grad_n) = wolfe_line_search(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 83, in wolfe_line_search
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ lbfgs_step_cu.forward -----------------sc:99
                  lbfgs_step_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 184, in _opt_step
    grad_q = self._get_step_direction(cost_n, q_n, grad_q_n)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)

  File "D:\ov\curobo\src\curobo\opt\newton\lbfgs.py", line 167, in _get_step_direction
    dq = LBFGScu.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\opt.py", line 80, in forward
    end_cuda_call(ccd, step_v)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ line_search_cu.update_best -----------------sc:99
                  line_search_cu.update_best took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 149, in solve
    act_seq = self.optimize(seed, shift_steps=0)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 71, in optimize
    act_seq = opt.optimize(act_seq, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\opt_base.py", line 170, in optimize
    out = self._optimize(opt_tensor, shift_steps, n_iters)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 144, in _optimize
    self._initialize_opt_iters_graph(q, grad_q, shift_steps=shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 499, in _initialize_opt_iters_graph
    self._create_opt_iters_graph(q, grad_q, shift_steps)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 547, in _create_opt_iters_graph
    self._cu_opt_q, self._cu_opt_cost, self._cu_q, self._cu_gq = self._opt_iters(

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 173, in _opt_iters
    cost_n, q, grad_q = self._opt_step(q.detach(), grad_q.detach())

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 186, in _opt_step
    self._update_best(q_n, grad_q_n, cost_n)

  File "D:\ov\curobo\src\curobo\opt\newton\newton_base.py", line 440, in _update_best
    (self.best_cost, self.best_q, self.best_iteration) = update_best(

  File "D:\ov\curobo\src\curobo\curobolib\ls.py", line 118, in update_best
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:122
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 160, in solve
    metrics = self.get_metrics(

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 66, in get_metrics
    return self.safety_rollout.get_metrics_cuda_graph(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 459, in get_metrics_cuda_graph
    self._cu_out_metrics = self.get_metrics(self._cu_metrics_state_in)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 433, in get_metrics
    state = self._get_augmented_state(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 481, in _get_augmented_state
    aug_state = self.compute_kinematics(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 515, in compute_kinematics
    ) = self.dynamics_model.robot_model.forward(q)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:120
                  geom_cu.pose_distance took 0.000500 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 160, in solve
    metrics = self.get_metrics(

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 66, in get_metrics
    return self.safety_rollout.get_metrics_cuda_graph(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 459, in get_metrics_cuda_graph
    self._cu_out_metrics = self.get_metrics(self._cu_metrics_state_in)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 436, in get_metrics
    out_metrics = self.convergence_fn(state, out_metrics)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 353, in convergence_fn
    ) = self.pose_convergence.forward_out_distance(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 373, in forward_out_distance
    distance, g_dist, r_err, idx = PoseErrorDistance.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 315, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:121
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 160, in solve
    metrics = self.get_metrics(

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 66, in get_metrics
    return self.safety_rollout.get_metrics_cuda_graph(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 459, in get_metrics_cuda_graph
    self._cu_out_metrics = self.get_metrics(self._cu_metrics_state_in)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 437, in get_metrics
    out_metrics.cost = self.cost_fn(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:123
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 160, in solve
    metrics = self.get_metrics(

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 66, in get_metrics
    return self.safety_rollout.get_metrics_cuda_graph(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 459, in get_metrics_cuda_graph
    self._cu_out_metrics = self.get_metrics(self._cu_metrics_state_in)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 433, in get_metrics
    state = self._get_augmented_state(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 481, in _get_augmented_state
    aug_state = self.compute_kinematics(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 515, in compute_kinematics
    ) = self.dynamics_model.robot_model.forward(q)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:122
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 160, in solve
    metrics = self.get_metrics(

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 66, in get_metrics
    return self.safety_rollout.get_metrics_cuda_graph(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 459, in get_metrics_cuda_graph
    self._cu_out_metrics = self.get_metrics(self._cu_metrics_state_in)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 436, in get_metrics
    out_metrics = self.convergence_fn(state, out_metrics)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 353, in convergence_fn
    ) = self.pose_convergence.forward_out_distance(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 373, in forward_out_distance
    distance, g_dist, r_err, idx = PoseErrorDistance.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 315, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:123
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 160, in solve
    metrics = self.get_metrics(

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 66, in get_metrics
    return self.safety_rollout.get_metrics_cuda_graph(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 459, in get_metrics_cuda_graph
    self._cu_out_metrics = self.get_metrics(self._cu_metrics_state_in)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 437, in get_metrics
    out_metrics.cost = self.cost_fn(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:124
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 160, in solve
    metrics = self.get_metrics(

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 66, in get_metrics
    return self.safety_rollout.get_metrics_cuda_graph(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 459, in get_metrics_cuda_graph
    self._cu_out_metrics = self.get_metrics(self._cu_metrics_state_in)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 433, in get_metrics
    state = self._get_augmented_state(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 481, in _get_augmented_state
    aug_state = self.compute_kinematics(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 515, in compute_kinematics
    ) = self.dynamics_model.robot_model.forward(q)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:124
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 160, in solve
    metrics = self.get_metrics(

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 66, in get_metrics
    return self.safety_rollout.get_metrics_cuda_graph(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 459, in get_metrics_cuda_graph
    self._cu_out_metrics = self.get_metrics(self._cu_metrics_state_in)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 436, in get_metrics
    out_metrics = self.convergence_fn(state, out_metrics)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 353, in convergence_fn
    ) = self.pose_convergence.forward_out_distance(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 373, in forward_out_distance
    distance, g_dist, r_err, idx = PoseErrorDistance.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 315, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:125
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 160, in solve
    metrics = self.get_metrics(

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 66, in get_metrics
    return self.safety_rollout.get_metrics_cuda_graph(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 459, in get_metrics_cuda_graph
    self._cu_out_metrics = self.get_metrics(self._cu_metrics_state_in)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 437, in get_metrics
    out_metrics.cost = self.cost_fn(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ kinematics_fused_cu.forward -----------------sc:125
                  kinematics_fused_cu.forward took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 160, in solve
    metrics = self.get_metrics(

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 66, in get_metrics
    return self.safety_rollout.get_metrics_cuda_graph(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 463, in get_metrics_cuda_graph
    self._cu_out_metrics = self.get_metrics(self._cu_metrics_state_in)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 433, in get_metrics
    state = self._get_augmented_state(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 481, in _get_augmented_state
    aug_state = self.compute_kinematics(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 515, in compute_kinematics
    ) = self.dynamics_model.robot_model.forward(q)

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0\kit\python\lib\contextlib.py", line 79, in inner
    return func(*args, **kwds)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 275, in forward
    link_pos_seq, link_quat_seq, link_spheres_tensor = self._cuda_forward(q)

  File "D:\ov\curobo\src\curobo\cuda_robot_model\cuda_robot_model.py", line 383, in _cuda_forward
    link_pos, link_quat, robot_spheres = get_cuda_kinematics(

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 258, in get_cuda_kinematics
    link_pos, link_quat, robot_spheres = KinematicsFusedFunction.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\kinematics.py", line 117, in forward
    end_cuda_call(ccd, out_link_pos)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:126
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 160, in solve
    metrics = self.get_metrics(

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 66, in get_metrics
    return self.safety_rollout.get_metrics_cuda_graph(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 463, in get_metrics_cuda_graph
    self._cu_out_metrics = self.get_metrics(self._cu_metrics_state_in)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 436, in get_metrics
    out_metrics = self.convergence_fn(state, out_metrics)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 353, in convergence_fn
    ) = self.pose_convergence.forward_out_distance(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 373, in forward_out_distance
    distance, g_dist, r_err, idx = PoseErrorDistance.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 315, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

------------------ geom_cu.pose_distance -----------------sc:127
                  geom_cu.pose_distance took 0.000000 secs
  File "D:\ov\curobo\examples\ik_example.py", line 234, in <module>
    demo_basic_ik()

  File "D:\ov\curobo\examples\ik_example.py", line 63, in demo_basic_ik
    result = ik_solver.solve_batch(goal)

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 794, in solve_batch
    return self._solve_from_solve_state(

  File "D:\ov\curobo\src\curobo\wrap\reacher\ik_solver.py", line 1045, in _solve_from_solve_state
    result = self.solver.solve(goal_buffer, coord_position_seed)

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 160, in solve
    metrics = self.get_metrics(

  File "D:\ov\curobo\src\curobo\wrap\wrap_base.py", line 66, in get_metrics
    return self.safety_rollout.get_metrics_cuda_graph(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 463, in get_metrics_cuda_graph
    self._cu_out_metrics = self.get_metrics(self._cu_metrics_state_in)

  File "D:\ov\curobo\src\curobo\rollout\arm_base.py", line 437, in get_metrics
    out_metrics.cost = self.cost_fn(state)

  File "D:\ov\curobo\src\curobo\rollout\arm_reacher.py", line 265, in cost_fn
    goal_cost = self.goal_cost.forward(

  File "D:\ov\curobo\src\curobo\rollout\cost\pose_cost.py", line 426, in forward
    distance = PoseError.apply(

  File "C:\Users\mwise\AppData\Local\ov\pkg\isaac-sim-4.0.0/exts/omni.isaac.ml_archive/pip_prebundle\torch\autograd\function.py", line 553, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 487, in forward
    ) = get_pose_distance(

  File "D:\ov\curobo\src\curobo\curobolib\geom.py", line 213, in get_pose_distance
    end_cuda_call(ccd, r)

  File "D:\ov\curobo\src\curobo\util\yatelem.py", line 138, in end_cuda_call
    exlst = traceback.extract_stack(f=None, limit=None)

